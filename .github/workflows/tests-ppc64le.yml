name: "Run tests for ppc64le architecture"

on:
  push:
    branches: [ graphite-carbon-s390x ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Python 2.7"
            distro: ubuntu18.04
            python-version: '2.7'
            toxenv: "py27"
          - name: "Python 3.7"
            distro: ubuntu18.04
            python-version: '3.7'
            toxenv: "py37"
          - name: "Python 3.8"
            distro: ubuntu20.04
            python-version: '3.8'
            toxenv: "py38"
          - name: "Python 3.9"
            distro: ubuntu20.04
            python-version: '3.9'
            toxenv: 'py39'
          - name: "Python 3.10"
            distro: ubuntu22.04
            python-version: '3.10'
            toxenv: 'py310'

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies & Run tests with tox
        uses: uraimo/run-on-arch-action@v2.2.0
        with:
          arch: ppc64le
          distro: ${{matrix.distro}}
          run: |
            ver=${{matrix.python-version}}
            if [[ ${{matrix.python-version}} == 2.7 ]]; then
              apt-get update && apt-get install -y python${ver} python${ver}-dev python-pip curl sudo git gcc g++ build-essential libssl-dev libffi-dev cargo
            elif [[ ${{matrix.python-version}} == 3.* ]]; then
              apt-get update && apt-get install -y python${ver} python3-pip sudo curl git libssl-dev libffi-dev python${ver}-dev cargo 
              if [[ ${{matrix.python-version}} == '3.10' ]]; then
                apt-get update && apt-get install -y python3-setuptools-rust
              fi
              sudo ln -s /usr/bin/python${ver} /usr/bin/python
            fi
            python -m pip install --target=/usr/bin --upgrade pip setuptools --force-reinstall
            python -m pip install 'tox<4' tox-gh-actions flake8 pytest
            if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
            tox -e ${{matrix.toxenv}}
